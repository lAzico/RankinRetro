@model RankinRetro.ViewModels.EditProductViewModel
@using RankinRetro.Data.Enum


<form method="post" asp-action="Edit" enctype="multipart/form-data">
    
    
    <div class="form-group">
        <div class="form-control">
            <label asp-for="Name">Name</label>
            <input asp-for="Name" class="form-control" placeholder="Enter name" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-control">
            <label asp-for="Description">Description</label>
            <input asp-for="Description" class="form-control" placeholder="Enter description" />
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-control">
            <label asp-for="Price">Price</label>
            <input asp-for="Price" class="form-control" placeholder="Enter price" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
        <div class="form-control">
            <label asp-for="CategoryId">Category</label>
            <!--This select list uses the IEnumerable "Categories", compares it to the category ID and then displays the name of the category where the ID would be in the select list-->
            <select asp-for="CategoryId" asp-items='new SelectList(Model.Categories, "CategoryId", "Name")' class="form-control"></select>
            <input type="hidden" asp-for="Categories">
        </div>
        <div class="form-control">
            <label asp-for="BrandId">Brand</label>
            <select asp-for="BrandId" asp-items='new SelectList(Model.Brands, "BrandId", "Name")' class="form-control"></select>
            <input type="hidden" asp-for="Brands">
        </div>
        <div class="form-control">
            <label asp-for="TypeId">Type</label>
            <select asp-for="TypeId" asp-items='new SelectList(Model.Types, "TypeId", "Name")' class="form-control"></select>
            <input type="hidden" asp-for="Types">
        </div>
            
        <div class="form-control">
            <label asp-for="Size">Size</label>
            <select asp-for="Size" asp-items="@Html.GetEnumSelectList<Size>()" class="form-control"></select>
        </div>
        <div class="form-control">
            <label asp-for="Colour">Colour</label>
            <select asp-for="Colour" asp-items="@Html.GetEnumSelectList<Colour>()" class="form-control"></select>
        </div>
        <div class="form-control">
            <label asp-for="Material">Material</label>
            <select asp-for="Material" asp-items="@Html.GetEnumSelectList<Material>()" class="form-control"></select>
        </div>
        <div class="form-control">
            <label asp-for="Image">Image</label>
            <input asp-for="Image" id="imageUpload" class="form-control" placeholder="Upload image" type="file" accept="image/jpeg,image/png">
            <span asp-validation-for="Image" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
    
</form>

<script>
    //Find the element by the ID
    const imageUpload = document.getElementById('imageUpload');

    //Make an event listener for file size to be less than 5 MB
    imageUpload.addEventListener('change', function() {
        const image = this.files[0];
        const reader = new FileReader();
        if (image.size > 5242880) {
            alert('Image size exceeds 5MB')
        }

        reader.onload = function(event) {
            const img = new Image();
            img.onload = function() {

                if (img.width != 280 && img.height != 430) {
                    alert('Image dimensions must be 280 x 430')
                    imageUpload.value = '';
                }
            };
            img.src = event.target.result;
        };
        reader.readAsDataURL(image)
    });
</script>