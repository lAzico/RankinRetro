@using RankinRetro.ViewModels

@model OrderDisplayViewModel

@foreach (var order in Model.Orders){
<div class="row d-flex justify-content-center" style=" margin-top: 20px">
        <div class="col-lg-10 col-xl9">
          <div class="card" style="border-radius: 10px;">
            <div class="card-header px-4 py-4">
                    <h5 class="text-muted mb-0">Order: @order.OrderId  <button style="margin-left:450px" type="submit" onclick="confirm('Are you sure you want cancel this order?')" class="btn btn-danger">Cancel order</button></h5>
            </div>
            <div class="card-body p-4">
              <div class="d-flex justify-content-between align-items-center mb-4">
              </div>
              <div class="card shadow-0 border mb-4">
                <div class="card-body">
                  @foreach (var orderItem in Model.OrderItems.Where(o => order.OrderId == o.OrderId))
                  {
                                
                  <div class="row">
                    <div class="col-md-2">
                      <img src="@orderItem.URL" class="img-fluid" >
                    </div>
                    <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                      <p class="text-muted mb-0">@orderItem.Name</p>
                    </div>
                    <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                      <p class="text-muted mb-0 small">£@orderItem.Price</p>
                    </div>
                    <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                      <p class="text-muted mb-0 small">Qty: @orderItem.Quantity</p>
                    </div>
                    <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                      <p class="text-muted mb-0 small">£@(orderItem.Quantity * orderItem.Price)</p>
                    </div>
                        <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                            <form method="post" action="RemoveItem">
                                <button class="btn btn-danger">Cancel item</button>
                                <input type="hidden" name="orderId" value="@order.OrderId">
                                <input type="hidden" name="productId" value="@orderItem.ProductId">
                            </form>
                        </div>
                  </div>
                  }
                </div>
              </div>

              <div class="d-flex justify-content-between pt-2">
                <p class="fw-bold mb-0">Order Details</p>
              </div>

              <div class="d-flex justify-content-between pt-2">
                <p class="text-muted mb-0">Order date: @order.OrderDate</p>
                <p class="text-muted mb-0"><span class="fw-bold me-4">Discount</span>@(order.DiscountAmount * 100)%</p>
              </div>

              <div class="d-flex justify-content-between mb-2">
                        <p class="text-muted mb-0"></p>
                <p class="text-muted mb-0"><span class="fw-bold me-4">Delivery Charges</span> Free</p>
              </div>
              <!--For every order, the delivery address will display-->
                    @foreach(var deliveryAddress in Model.Address.Where(x => x.OrderId == order.OrderId))
                    {
                        <div class="d-flex justify-content-between">
                            <p class="fw-bold mb-0">Shipping Address</p>
                        </div>
                        <div class="d-flex justify-content-between pt-2">
                            <p class="text-muted mb-0">First name: @deliveryAddress.ShippingFirstName</p>
                            <p class="text-muted mb-0">First line address: @deliveryAddress.ShippingAddressFirstline</p>
                        </div>
                        <div class="d-flex justify-content-between pt-2">
                            <p class="text-muted mb-0">Surname: @deliveryAddress.ShippingSurname</p>
                            <p class="text-muted mb-0">
                                Second line address:
                                @if (deliveryAddress.ShippingAddressSecondline != null)
                                {
                                    @deliveryAddress.ShippingAddressSecondline
                                }
                                else
                                {
                                    <span>Empty</span>
                                }
                            </p>
                        </div>
                        <div class="d-flex justify-content-between pt-2">
                            <p class="text-muted mb-0">Email: @deliveryAddress.Email</p>
                            <p class="text-muted mb-0">Postcode: @deliveryAddress.ShippingAddressPostcode</p>
                        </div>
                        <div class="d-flex justify-content-between pt-2">
                            <p class="text-muted mb-0"></p>
                            <p class="text-muted mb-0">City/Town: @deliveryAddress.ShippingCityTown</p>
                        </div>
                    }
                </div>
            <div class="card-footer border-0 px-4 py-3" style="background-color: dimgrey; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
                
                <form method= "post" action="RemoveOrder" >
                    <input type="hidden" name="orderId" value="@order.OrderId">
                        <h5 class="d-flex align-items-center justify-content-end text-white text-uppercase mb-0">Total paid: <span class="h2 mb-0 ms-2">£@order.Total</span></h5>
                </form>
            </div>
          </div>
        </div>
      </div>
      }
